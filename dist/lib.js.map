{"version":3,"file":"lib.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,aAAa;AACb;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP,aAAa;AACb;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnEA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,6IAA6I,cAAc;AAC3J,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACgC;AACsD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uCAAuC,kEAAkE;AACnJ;AACA;AACA;AACA,wBAAwB,wDAAe;AACvC;AACA,KAAK;AACL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,wBAAwB,sDAAa;AACrC;AACA;AACA;AACA;AACA,yBAAyB,qDAAY;AACrC,yCAAyC,6CAAK;AAC9C;AACA;AACA;AACA;AACA,wBAAwB,qDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,IAAI;AACT;;;;;;;;;;;;;;;;;AC1GA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,6IAA6I,cAAc;AAC3J,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACgC;AACiG;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA,YAAY,6DAAoB;AAChC;AACA;AACA;AACA;AACA,YAAY,gEAAuB;AACnC;AACA;AACA,0CAA0C,wBAAwB,qBAAqB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,gCAAgC,iEAAwB;AACxD;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,gCAAgC,oEAA2B;AAC3D;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6CAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,sBAAsB;AAC9F,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;AClJA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,6IAA6I,cAAc;AAC3J,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACgC;AACqK;AACrM;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAoB;AAClD;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAwB;AACzE;AACA;AACA;AACA;AACA,wDAAwD,gEAAuB;AAC/E;AACA;AACA;AACA;AACA;AACA,oDAAoD,oEAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAW;AACvB;AACA;AACA,8BAA8B,0DAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yDAAgB;AACrD;AACA;AACA,iBAAiB;AACjB,6BAA6B,yDAAgB;AAC7C;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,IAAI,6CAAK,0CAA0C,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;ACpJA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,6IAA6I,cAAc;AAC3J,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;;;;;;;UC3DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACN4C;AACY;AACI","sources":["webpack://crashme/webpack/universalModuleDefinition","webpack://crashme/./public/lib/events.ts","webpack://crashme/./public/lib/init.client.worker.ts","webpack://crashme/./public/lib/init.detector.worker.ts","webpack://crashme/./public/lib/init.ts","webpack://crashme/./public/lib/utils.ts","webpack://crashme/webpack/bootstrap","webpack://crashme/webpack/runtime/define property getters","webpack://crashme/webpack/runtime/hasOwnProperty shorthand","webpack://crashme/webpack/runtime/make namespace object","webpack://crashme/./public/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crashme\"] = factory();\n\telse\n\t\troot[\"crashme\"] = factory();\n})(this, () => {\nreturn ","export function isStartEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'start';\n}\nexport function createStartEvent(report) {\n    return {\n        event: 'start',\n        report: report,\n    };\n}\nexport function createPingEvent() {\n    return { event: 'ping' };\n}\nexport function isPingEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'ping';\n}\nexport function isUpdateEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'update';\n}\nexport function createUpdateEvent(report) {\n    return { event: 'update', report: report };\n}\nexport function isCloseEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'close';\n}\nexport function createCloseEvent(id) {\n    return {\n        event: 'close',\n        id: id,\n    };\n}\nexport function isCrashDetectedEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'crash-detected';\n}\nexport function createCrashDetectedEvent(report, senderId) {\n    return {\n        event: 'crash-detected',\n        report: report,\n        senderId: senderId,\n    };\n}\nexport function isStaleTabDetectedEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'stale-tab-detected';\n}\nexport function createStaleTabDetectedEvent(report, senderId) {\n    return {\n        event: 'stale-tab-detected',\n        report: report,\n        senderId: senderId,\n    };\n}\nexport function isCrashReportedEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'crash-reported';\n}\nexport function createCrashReportedEvent(id) {\n    return {\n        event: 'crash-reported',\n        id: id,\n    };\n}\nexport function isStaleTabReportedEvent(event) {\n    return (event === null || event === void 0 ? void 0 : event.event) === 'stale-tab-reported';\n}\nexport function createStaleTabReportedEvent(report) {\n    return {\n        event: 'stale-tab-reported',\n        report: report,\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getDb } from './utils';\nimport { createPingEvent, isCloseEvent, isStartEvent, isUpdateEvent } from './events';\n/**\n * Main logic of the Web Worker running with the tab. Create a separate file for the worker with code:\n *\n * initClientWorker({\n *   dbName: 'NAME OF YOUR DB',\n *   pingInterval: 1000,\n * });\n *\n */\nexport function initClientWorker(options) {\n    var _this = this;\n    var lastStateReport;\n    var tabLastActive = Date.now();\n    var db;\n    setInterval(function () {\n        if (!db) {\n            // not started yet\n            return;\n        }\n        if (lastStateReport === null || lastStateReport === void 0 ? void 0 : lastStateReport.id) {\n            var transaction = db.transaction(['tabs'], 'readwrite');\n            var store = transaction.objectStore('tabs');\n            var workerLastActive = Date.now();\n            // save latest received info here - the tab may be paused because of debugging but we need to mark the tab as alive anyway because the worker is still alive\n            store.put(__assign(__assign({}, structuredClone(lastStateReport)), { tabLastActive: tabLastActive, workerLastActive: workerLastActive }));\n        }\n        // ping to tab so it can send latest values\n        // saving will happen on the next pingInterval\n        var pingEvent = createPingEvent();\n        postMessage(pingEvent);\n    }, options.pingInterval);\n    addEventListener('message', function (message) { return __awaiter(_this, void 0, void 0, function () {\n        var transaction, store;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (isUpdateEvent(message.data)) {\n                        tabLastActive = Date.now();\n                        lastStateReport = structuredClone(message.data.report);\n                        // saving cannot happen here because message may not be sent when tab is paused (e.g. while debugging)\n                    }\n                    if (!isStartEvent(message.data)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, getDb(options.dbName)];\n                case 1:\n                    db = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (isCloseEvent(message.data) && db) {\n                        transaction = db.transaction(['tabs'], 'readwrite');\n                        store = transaction.objectStore('tabs');\n                        store.delete(message.data.id);\n                        db = undefined;\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); });\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getDb } from './utils';\nimport { createCrashDetectedEvent, createStaleTabDetectedEvent, isCrashReportedEvent, isStaleTabReportedEvent, } from './events';\n/**\n * Main logic of the Shared Worker responsible for detecting crashes. Create a separate file for the worker with code:\n *\n * initDetectorWorker({\n *   dbName: 'NAME OF YOUR DB',\n *   staleThreshold: 60000,\n *   crashThreshold: 5000,\n *   interval: 5000,\n * });\n *\n */\nexport function initDetectorWorker(options) {\n    var db;\n    var started = false;\n    var openPorts = [];\n    function handleMessageFromReporter(event) {\n        if (isCrashReportedEvent(event.data)) {\n            var transaction = db.transaction(['tabs'], 'readwrite');\n            var store = transaction.objectStore('tabs');\n            store.delete(event.data.id);\n        }\n        if (isStaleTabReportedEvent(event.data)) {\n            var transaction = db.transaction(['tabs'], 'readwrite');\n            var store = transaction.objectStore('tabs');\n            store.put(__assign(__assign({}, event.data.report), { staleReported: true }));\n        }\n    }\n    /**\n     * Check which tabs have stopped sending updates but did not clear themselves properly\n     */\n    function checkStaleTabs() {\n        var transaction = db.transaction(['tabs'], 'readwrite');\n        var store = transaction.objectStore('tabs');\n        var request = store.getAll();\n        request.onsuccess = function () {\n            var tabs = request.result;\n            var activeTabs = [];\n            var inactiveTabs = [];\n            var staleTabs = [];\n            tabs.forEach(function (tab) {\n                var workerInactivity = Date.now() - tab.workerLastActive;\n                var tabInactivity = Date.now() - tab.tabLastActive;\n                if (workerInactivity > options.crashThreshold) {\n                    inactiveTabs.push(tab);\n                }\n                else if (options.staleThreshold && tabInactivity > options.staleThreshold && !tab.staleReported) {\n                    staleTabs.push(tab);\n                }\n                else {\n                    activeTabs.push(tab);\n                }\n            });\n            if (activeTabs.length === 0) {\n                // no active tabs, skip until a tab gets active\n                return;\n            }\n            // use only one tab for reporting\n            var reporter = activeTabs.pop(); // must be defined based on the check above\n            inactiveTabs.forEach(function (report) {\n                openPorts.forEach(function (port) {\n                    var event = createCrashDetectedEvent(report, reporter.id);\n                    port.postMessage(event);\n                });\n            });\n            staleTabs.forEach(function (report) {\n                openPorts.forEach(function (port) {\n                    var event = createStaleTabDetectedEvent(report, reporter.id);\n                    port.postMessage(event);\n                });\n            });\n        };\n    }\n    self.addEventListener('connect', function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var port_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!started) return [3 /*break*/, 2];\n                        return [4 /*yield*/, getDb(options.dbName)];\n                    case 1:\n                        db = _a.sent();\n                        port_1 = event.ports[0];\n                        openPorts.push(port_1);\n                        port_1.addEventListener('message', handleMessageFromReporter);\n                        port_1.addEventListener('close', function () {\n                            openPorts = openPorts.filter(function (p) { return p !== port_1; });\n                        });\n                        port_1.start();\n                        setInterval(checkStaleTabs, options.interval);\n                        started = true;\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getDb } from './utils';\nimport { createCloseEvent, createCrashReportedEvent, createStaleTabReportedEvent, createStartEvent, createUpdateEvent, isCrashDetectedEvent, isPingEvent, isStaleTabDetectedEvent, } from './events';\n/**\n * Main function to initialize crash detection. This should be run from the main thread of the tab.\n */\nexport function initCrashDetection(options) {\n    var worker;\n    var detector;\n    var stateReport = {};\n    var db;\n    var log = function (log) {\n        var _a;\n        log.id = String(stateReport.id);\n        (_a = options.log) === null || _a === void 0 ? void 0 : _a.call(options, log);\n    };\n    function handleDetectorMessage(message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tab, success, crashReportedEvent, report, success, staleTabReportedEvent;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isCrashDetectedEvent(message.data) && message.data.senderId === stateReport.id)) return [3 /*break*/, 2];\n                        tab = message.data.report;\n                        return [4 /*yield*/, options.reportCrash(tab)];\n                    case 1:\n                        success = _a.sent();\n                        if (success) {\n                            crashReportedEvent = createCrashReportedEvent(message.data.report.id);\n                            detector.port.postMessage(crashReportedEvent);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!(options.reportStaleTab && isStaleTabDetectedEvent(message.data) && message.data.senderId === stateReport.id)) return [3 /*break*/, 4];\n                        report = message.data.report;\n                        return [4 /*yield*/, options.reportStaleTab(report)];\n                    case 3:\n                        success = _a.sent();\n                        if (success) {\n                            staleTabReportedEvent = createStaleTabReportedEvent(message.data.report);\n                            detector.port.postMessage(staleTabReportedEvent);\n                        }\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    }\n    /**\n     * Generate id for the tab\n     */\n    function initialize() {\n        stateReport.id = options.id;\n        stateReport.tabFirstActive = Date.now();\n    }\n    /**\n     * Update latest state of the tab\n     */\n    function handleWebWorkerMessage(message) {\n        if (isPingEvent(message.data)) {\n            // info should have all required info when passed here\n            options.updateInfo(stateReport);\n            var updateEvent = createUpdateEvent(stateReport);\n            worker.postMessage(updateEvent);\n        }\n    }\n    function registerWorkers() {\n        worker = options.createClientWorker();\n        worker.addEventListener('message', handleWebWorkerMessage);\n        detector = options.createDetectorWorker();\n        detector.port.addEventListener('message', handleDetectorMessage);\n        detector.port.start();\n    }\n    function unregisterWorkers() {\n        worker.removeEventListener('message', handleWebWorkerMessage);\n        detector.port.removeEventListener('message', handleDetectorMessage);\n    }\n    function startWhenReady() {\n        // beforeunload is triggered only after at least one interaction\n        window.addEventListener('click', start);\n    }\n    function start() {\n        return __awaiter(this, void 0, void 0, function () {\n            var startEvent;\n            return __generator(this, function (_a) {\n                window.removeEventListener('click', start);\n                initialize();\n                registerWorkers();\n                window.addEventListener('beforeunload', function () {\n                    // to avoid any delays clean-up happens in the current tab as well\n                    var transaction = db.transaction(['tabs'], 'readwrite');\n                    var store = transaction.objectStore('tabs');\n                    store.delete(stateReport.id);\n                    var closeEvent = createCloseEvent(stateReport.id);\n                    worker.postMessage(closeEvent);\n                    unregisterWorkers();\n                });\n                startEvent = createStartEvent(stateReport);\n                worker.postMessage(startEvent);\n                return [2 /*return*/];\n            });\n        });\n    }\n    // main entry point\n    getDb(options.dbName).then(function (result) { return (db = result); });\n    if (document.readyState === 'complete') {\n        startWhenReady();\n    }\n    else {\n        window.addEventListener('load', function () {\n            startWhenReady();\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexport function getDb(dbName) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var request = indexedDB.open(dbName);\n                    request.onerror = function () {\n                        reject(request.error);\n                    };\n                    request.onsuccess = function () {\n                        resolve(request.result);\n                    };\n                    request.onupgradeneeded = function (event) {\n                        if (!event.target) {\n                            return;\n                        }\n                        var db = request.result;\n                        if (!db.objectStoreNames.contains('tabs')) {\n                            db.createObjectStore('tabs', { keyPath: 'id' });\n                        }\n                    };\n                })];\n        });\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { initCrashDetection } from './init';\nexport { initClientWorker } from './init.client.worker';\nexport { initDetectorWorker } from './init.detector.worker';\n"],"names":[],"sourceRoot":""}